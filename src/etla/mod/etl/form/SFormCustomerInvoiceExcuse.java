/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etla.mod.etl.form;

import etla.mod.SModConsts;
import etla.mod.etl.db.SDbCustomerInvoice;
import etla.mod.etl.db.SDbCustomerInvoiceExcuse;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Isabel Servín
 */
public class SFormCustomerInvoiceExcuse extends SBeanForm {
    
    private SDbCustomerInvoiceExcuse moRegistry;
    private SDbCustomerInvoice moCustomerInvoice;
    
    /**
     * Creates new form SFormSalesAgent
     * @param client
     * @param title
     */
    public SFormCustomerInvoiceExcuse(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.A_CUSTOMERINVOICES_EXCUSES, 0, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlInvoiceNumber = new javax.swing.JLabel();
        jtfInvoiceNumber = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jlExcuse = new javax.swing.JLabel();
        moTextExcuse = new sa.lib.gui.bean.SBeanFieldText();
        jPanel12 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlInvoiceNumber.setText("Remisión:");
        jlInvoiceNumber.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlInvoiceNumber);

        jtfInvoiceNumber.setEditable(false);
        jtfInvoiceNumber.setFocusable(false);
        jtfInvoiceNumber.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jtfInvoiceNumber);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExcuse.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jlExcuse.setText("Excusa:*");
        jlExcuse.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlExcuse);

        moTextExcuse.setPreferredSize(new java.awt.Dimension(350, 23));
        jPanel4.add(moTextExcuse);

        jPanel2.add(jPanel4);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel2.add(jPanel12);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel5.setLayout(new java.awt.BorderLayout(5, 0));
        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jlExcuse;
    private javax.swing.JLabel jlInvoiceNumber;
    private javax.swing.JTextField jtfInvoiceNumber;
    private sa.lib.gui.bean.SBeanFieldText moTextExcuse;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */
    
    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);
        
        moTextExcuse.setTextSettings(SGuiUtils.getLabelName(jlExcuse), 255);
        
        moFields.addField(moTextExcuse);
        
        moFields.setFormButton(jbSave);
    }
    
    private void setCustomerInvoice(final SDbCustomerInvoice customerInvoice) {
        moCustomerInvoice = customerInvoice;
        
        jtfInvoiceNumber.setText(moCustomerInvoice.getInvoiceNumber());
        jtfInvoiceNumber.setCaretPosition(0);
        
        if (moRegistry.isRegistryNew()) {
            moRegistry.setCustomerInvoiceKey(moCustomerInvoice.getCustomerInvoiceKey());
        }
    }
    
    /*
     * Public methods
     */
    
    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbCustomerInvoiceExcuse) registry;
        moCustomerInvoice = null; // will be set in setValue()

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextExcuse.setValue(moRegistry.getExcuse());

        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
            
        }
        else {
            
        }
        
        addAllListeners();
    }

    @Override
    public SDbCustomerInvoiceExcuse getRegistry() throws Exception {
        SDbCustomerInvoiceExcuse registry = moRegistry.clone();

        if (registry.isRegistryNew()) {}

        registry.setExcuse(moTextExcuse.getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        return validation;
    }

    @Override
    public void setValue(final int type, final Object value) {
        switch (type) {
            case SModConsts.A_CUSTOMERINVOICES:
                setCustomerInvoice((SDbCustomerInvoice) value);
                break;
            default:
        }
    }
}
