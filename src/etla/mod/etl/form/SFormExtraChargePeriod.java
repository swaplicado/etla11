/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etla.mod.etl.form;

import etla.mod.SModConsts;
import etla.mod.etl.db.SDbExtraCharge;
import etla.mod.etl.db.SDbExtraChargePeriod;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFieldKey;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class SFormExtraChargePeriod extends SBeanForm implements ItemListener {
    
    private SDbExtraChargePeriod moRegistry;
    
    /**
     * Creates new form SFormExtraChargePeriod
     * @param client
     * @param title
     */
    public SFormExtraChargePeriod(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.A_CHARGE_PERIOD, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlExtraCharge = new javax.swing.JLabel();
        moKeyExtraCharge = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        jtfCode = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlChargePercentageOriginal = new javax.swing.JLabel();
        jtfChargePercentageOriginal = new javax.swing.JTextField();
        jlChargePercentageOriginalHint = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jckActive = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jlDateStart = new javax.swing.JLabel();
        moDateStart = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel13 = new javax.swing.JPanel();
        jlDateEnd_n = new javax.swing.JLabel();
        moDateEnd_n = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel8 = new javax.swing.JPanel();
        jlChargePercentage = new javax.swing.JLabel();
        moDecChargePercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        jlChargePercentageHint = new javax.swing.JLabel();
        jlGuidelines = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel2.setLayout(new java.awt.GridLayout(9, 1, 0, 5));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlExtraCharge.setText("Cargo extra:*");
        jlExtraCharge.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlExtraCharge);

        moKeyExtraCharge.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel7.add(moKeyExtraCharge);

        jPanel2.add(jPanel7);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);

        jtfCode.setEditable(false);
        jtfCode.setFocusable(false);
        jtfCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jtfCode);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        jtfName.setEditable(false);
        jtfName.setFocusable(false);
        jtfName.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel4.add(jtfName);

        jPanel2.add(jPanel4);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlChargePercentageOriginal.setText("% cargo extra:");
        jlChargePercentageOriginal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlChargePercentageOriginal);

        jtfChargePercentageOriginal.setEditable(false);
        jtfChargePercentageOriginal.setFocusable(false);
        jtfChargePercentageOriginal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jtfChargePercentageOriginal);

        jlChargePercentageOriginalHint.setForeground(java.awt.Color.gray);
        jlChargePercentageOriginalHint.setText("(% sobre el subtotal de la factura.)");
        jlChargePercentageOriginalHint.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel6.add(jlChargePercentageOriginalHint);

        jPanel2.add(jPanel6);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckActive.setText("El cargo extra está activado");
        jckActive.setEnabled(false);
        jckActive.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel9.add(jckActive);

        jPanel2.add(jPanel9);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStart.setText("Fecha inicial:*");
        jlDateStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlDateStart);
        jPanel12.add(moDateStart);

        jPanel2.add(jPanel12);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateEnd_n.setText("Fecha final:");
        jlDateEnd_n.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlDateEnd_n);
        jPanel13.add(moDateEnd_n);

        jPanel2.add(jPanel13);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlChargePercentage.setText("% cargo extra:*");
        jlChargePercentage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlChargePercentage);
        jPanel8.add(moDecChargePercentage);

        jlChargePercentageHint.setForeground(java.awt.Color.gray);
        jlChargePercentageHint.setText("(% sobre el subtotal de la factura.)");
        jlChargePercentageHint.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel8.add(jlChargePercentageHint);

        jPanel2.add(jPanel8);

        jlGuidelines.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlGuidelines.setForeground(java.awt.Color.red);
        jlGuidelines.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlGuidelines.setText("¡Recuerda eliminar los períodos obsoletos de este mismo cargo extra!");
        jPanel2.add(jlGuidelines);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel5.setLayout(new java.awt.BorderLayout(5, 0));
        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox jckActive;
    private javax.swing.JLabel jlChargePercentage;
    private javax.swing.JLabel jlChargePercentageHint;
    private javax.swing.JLabel jlChargePercentageOriginal;
    private javax.swing.JLabel jlChargePercentageOriginalHint;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlDateEnd_n;
    private javax.swing.JLabel jlDateStart;
    private javax.swing.JLabel jlExtraCharge;
    private javax.swing.JLabel jlGuidelines;
    private javax.swing.JLabel jlName;
    private javax.swing.JTextField jtfChargePercentageOriginal;
    private javax.swing.JTextField jtfCode;
    private javax.swing.JTextField jtfName;
    private sa.lib.gui.bean.SBeanFieldDate moDateEnd_n;
    private sa.lib.gui.bean.SBeanFieldDate moDateStart;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecChargePercentage;
    private sa.lib.gui.bean.SBeanFieldKey moKeyExtraCharge;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */
    
    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 560, 350);
        
        moKeyExtraCharge.setKeySettings(miClient, SGuiUtils.getLabelName(jlExtraCharge), true);
        moDateStart.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateStart), true);
        moDateEnd_n.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateEnd_n), false);
        moDecChargePercentage.setDecimalSettings(SGuiUtils.getLabelName(jlChargePercentageOriginal), SGuiConsts.GUI_TYPE_DEC_PER_DISC, true);
        
        moFields.addField(moKeyExtraCharge);
        moFields.addField(moDateStart);
        moFields.addField(moDateEnd_n);
        moFields.addField(moDecChargePercentage);
        
        moFields.setFormButton(jbSave);
    }
    
    private void itemStateChangedExtraCharge() {
        if (moKeyExtraCharge.getSelectedIndex() <= 0) {
            jtfCode.setText("");
            jtfName.setText("");
            jtfChargePercentageOriginal.setText("");
            jckActive.setSelected(false);
        }
        else {
            SDbExtraCharge extraCharge = (SDbExtraCharge) miClient.getSession().readRegistry(SModConsts.A_CHARGE, moKeyExtraCharge.getValue());
            jtfCode.setText(extraCharge.getCode());
            jtfName.setText(extraCharge.getName());
            jtfChargePercentageOriginal.setText(SLibUtils.getDecimalFormatPercentageDiscount().format(extraCharge.getChargePercentage()));
            jckActive.setSelected(extraCharge.isActive());
            
            jtfCode.setCaretPosition(0);
            jtfName.setCaretPosition(0);
            jtfChargePercentageOriginal.setCaretPosition(0);
        }
    }

    /*
     * Public methods
     */
    
    /*
     * Overriden methods
     */
    
    @Override
    public void addAllListeners() {
        moKeyExtraCharge.addItemListener(this);
    }

    @Override
    public void removeAllListeners() {
        moKeyExtraCharge.removeItemListener(this);
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyExtraCharge, SModConsts.A_CHARGE, 0, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbExtraChargePeriod) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.setDateStart(miClient.getSession().getCurrentDate());
            
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyExtraCharge.setValue(new int[] { moRegistry.getFkExtraChargeId() });
        itemStateChangedExtraCharge();
        moDateStart.setValue(moRegistry.getDateStart());
        moDateEnd_n.setValue(moRegistry.getDateEnd_n());
        moDecChargePercentage.setValue(moRegistry.getChargePercentage());

        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
        }
        else {
        }
        
        addAllListeners();
    }

    @Override
    public SDbExtraChargePeriod getRegistry() throws Exception {
        SDbExtraChargePeriod registry = moRegistry.clone();

        if (registry.isRegistryNew()) {}

        registry.setDateStart(moDateStart.getValue());
        registry.setDateEnd_n(moDateEnd_n.getValue());
        registry.setChargePercentage(moDecChargePercentage.getValue());
        registry.setFkExtraChargeId(moKeyExtraCharge.getValue()[0]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        
        return validation;
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof SBeanFieldKey) {
            SBeanFieldKey field = (SBeanFieldKey) e.getSource();
            if (field == moKeyExtraCharge) {
                itemStateChangedExtraCharge();
            }
        }
    }
}
