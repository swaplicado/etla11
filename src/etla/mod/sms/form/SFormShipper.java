/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etla.mod.sms.form;

import erp.lib.SLibUtilities;
import etla.mod.SModConsts;
import etla.mod.sms.db.SDbShipper;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Daniel López, Isabel Servín
 */
public class SFormShipper extends SBeanForm {
    
    private SDbShipper moRegistry;
    
    /**
     * Creates new form SFormCustomer
     * @param client
     * @param title
     */
    public SFormShipper(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.SU_SHIPPER, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel6 = new javax.swing.JPanel();
        jlMail = new javax.swing.JLabel();
        moTextMail = new sa.lib.gui.bean.SBeanFieldText();
        jPanel7 = new javax.swing.JPanel();
        jlCarrierId = new javax.swing.JLabel();
        moTextCarrierId = new sa.lib.gui.bean.SBeanFieldText();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);
        jPanel3.add(moTextCode);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel4.add(moTextName);

        jPanel2.add(jPanel4);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlMail.setForeground(new java.awt.Color(0, 153, 153));
        jlMail.setText("Mail:*");
        jlMail.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlMail);

        moTextMail.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel6.add(moTextMail);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCarrierId.setText("ID transportista:");
        jlCarrierId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlCarrierId);
        jPanel7.add(moTextCarrierId);

        jLabel1.setForeground(java.awt.SystemColor.textInactiveText);
        jLabel1.setText("(ID transportista en Revuelta)");
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(jLabel1);

        jPanel2.add(jPanel7);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel5.setLayout(new java.awt.BorderLayout(5, 0));
        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel jlCarrierId;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlMail;
    private javax.swing.JLabel jlName;
    private sa.lib.gui.bean.SBeanFieldText moTextCarrierId;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextMail;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */
    
    private void initComponentsCustom() {              
        SGuiUtils.setWindowBounds(this, 560, 350);
        
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 10);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 100);
        moTextMail.setTextSettings(SGuiUtils.getLabelName(jlMail), 100);
        moTextMail.setTextCaseType(0);
        moTextCarrierId.setTextSettings(SGuiUtils.getLabelName(jlCarrierId), 10, 0);
        
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moTextMail);
        moFields.addField(moTextCarrierId);
        
        moFields.setFormButton(jbSave);
    }    
    /*
     * Public methods
     */
    
    /*
     * Overriden methods
     */
    
    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbShipper) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setText(moRegistry.getCode());
        moTextName.setText(moRegistry.getName());
        moTextMail.setText(moRegistry.getMail());
        moTextCarrierId.setText(moRegistry.getCarrierId());
       
        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
        }
        else {
        }
        
        addAllListeners();
    }

    @Override
    public SDbShipper getRegistry() throws Exception {
        SDbShipper registry = moRegistry.clone();

        if (registry.isRegistryNew()) {}

        //registry.setPkShipperId(...);
        registry.setCarrierId(moTextCarrierId.getValue());
        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setMail(moTextMail.getValue());
        //registry.setDeleted(...);
        //registry.setSystem(...);
        //registry.setFkUserInsertId(...);
        //registry.setFkUserUpdateId(...);
        //registry.setTsUserInsert(...);
        //registry.setTsUserUpdate(...);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
        if (validation.isValid()) {
            String validateMail = SLibUtilities.validateEmail(moTextMail.getText());
            if (!validateMail.isEmpty()) {
                validation.setMessage(validateMail);
                validation.setComponent(moTextMail);
            }
        }
        return validation;
    }
}
